// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutor.Data;

#nullable disable

namespace Tutor.Migrations
{
    [DbContext(typeof(TutorDbContext))]
    [Migration("20231106120434_JWT")]
    partial class JWT
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tutor.Models.Domain.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3981),
                            Name = "Administrator",
                            UpdatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3993)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3995),
                            Name = "Subadmin",
                            UpdatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3995)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3996),
                            Name = "Tutor",
                            UpdatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3996)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3997),
                            Name = "Student",
                            UpdatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(3998)
                        });
                });

            modelBuilder.Entity("Tutor.Models.Domain.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(4138),
                            Email = "admin@gmail.com",
                            EmailVerified = true,
                            FirstName = "Super",
                            LastName = "Admin",
                            Password = "$2a$11$HEOS7Tlk3GCt3tYSJpLL/OKS3WfznYaAfSRS3.KQFP.lQPJXhoz8W",
                            RoleId = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 11, 6, 17, 34, 34, 283, DateTimeKind.Local).AddTicks(4139)
                        });
                });

            modelBuilder.Entity("Tutor.Models.Domain.UserModel", b =>
                {
                    b.HasOne("Tutor.Models.Domain.RoleModel", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Tutor.Models.Domain.RoleModel", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
